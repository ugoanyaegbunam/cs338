-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
-----BEGIN RSA PUBLIC KEY-----
MIIBigKCAYEAwHuzLFdfmAkvM4399N0tI6GuIkbqJf8m4wUXsiwIWl4SowsSD6Px
aUPng2Qthr1BpNfhF0KTH+1Y1Wr2uLWrbSNjC384anXZCAt+yF9zezMWIz9uBGU3
NM3M8huJD3dNVhNGv2s+UyjkSfPCYCG02n075zwtwYZvfy7DKKFf9iQgoKU99r5Q
+Zv3wqat8x1uc8JBfDzlzq1yLF/lZuJDyC9/ng2KRnJVTP2iPI9r4ZaqOi91IQx9
q9DB1cqATBj5OwLNGYfbHycHFept6Mq/+t6EO+hQn1CdqNLPqXEwdU7mKRiCt581
UWxoxiXpPQ0RXb+MzocLUaWEK+4MjjMJrfgjagASlTHc0lSQPJ+UXwW9nLTVG0Fn
AwtvZLQ6iFJeOCrRyDm8rej4vqCPoQxIrr2l9bQ01Dl9bnpztxpVlN8O3uYCfIM4
fEg98AaggUBCOsMFoEHG8vu+Me3OTaDSFWJchVFL0vLxl/bu4Qe2UvnkRLEtrgtE
3PUAl7xinV/3AgMBAAE=
-----END RSA PUBLIC KEY-----
Private Key:
    In the file I expect to see the following:
    RSAPrivateKey ::= SEQUENCE {
             version           Version,
             modulus           INTEGER,  -- n
             publicExponent    INTEGER,  -- e
             privateExponent   INTEGER,  -- d
             prime1            INTEGER,  -- p
             prime2            INTEGER,  -- q
             exponent1         INTEGER,  -- d mod (p-1)
             exponent2         INTEGER,  -- d mod (q-1)
             coefficient       INTEGER,  -- (inverse of q) mod p
             otherPrimeInfos   OtherPrimeInfos OPTIONAL
         }

    I just pasted my private key into the online decoders and it displayed it very nicely. I didn't really have to change any settings becasue it was all noticed and contextualized automatically.

    The first integer correlates to the version. According to the appendix it basically lets you know whether 2 prime numbers were used or multiple were used.
        The integer value for version for me is 0x00 which means it used 2 prime numbers.
    The next integer represents modulus, which in the whole rsa process is what we referred to as n. Mine was: 
        0x00d49b14f203c16565d2fb6b46d9ce8e56ff54bfc8b575e859bc4e9d04ed037b2e09faa0fd57928fd8429b52b8d83e446ff4c7841ba8cb24eff81804dc55bea3b5f7350f72d3dbad6820e84b2790d5f8b4f4a95391212680976c55fbb929054bea881e0e61b03c639fa1a44ec7f44dc756f6de39d3de0bf8958c5875899f361fc9e54d0313f65b028f328985a4c485c71b62bee36f84705c42c04cb8a71443d99fa761d5605b8a2ea5e8278e2a34703892da849cf75aac15a6576651af2dfcb6c7bd2f1425ab3b8226598a4607f3c3daf4c32d4e364cba39bf4cca1b0b692861bbba17eb3237759eeacc363fec728da195f2c44bfaa879eeb720741bbd1f77e0da10d45cee25e7532b81084e943e07310b6b832a99e6b496270ffd5d4784ddf66224263e7aaa0d5ddb2ee8cdbf2adc56c2d3f39361c14f2f91baae0b4513d0053362b267bb783fca17a2392f6cfdd7ce50740c5a76c61ed84d976911150792eb0eb7cd6068d491629629d73da0b0cd6f32542679842b2ee75b4d196f3b30a71455
    The third integer represents the RSA public exponent e. Mine was:
        0x010001
    The next integer represents the private exponent which we've referred to as d. Mine was:
        0x018038912e9bb473cb378c744656da0116b840975848fed9c3b8cc8cdecd4456e59d099468444e5a8dd3d1c6d3fac5c068c74ffdfc98362217bed1a990bb983ef7c1d77c2095a5f8e30fc8bed64f1062db0ab3f82bdcc9f84e16084e2378a5269a404addff93f328b147fb1c31c0ab02d580d00265220b338dddbb6648f6e56674056535046b5a5b38ef0f4cb6ec3f0b3c32c547c1ce8a40fefb0878e04718f15909b31e91dedd018a5343f5cf03759861cd6df5a4dd923af46fb23a39cfd5597aa0d4c775b887dd11cdd0bc7913bc4ae2fcd19b60aaa6901c66a54ca4b2672312d095d5a41d3245abd61776acd17feb7514642e99ff7d9e9a62adbe1d70a44ada0a540632251b54f3afc4225c3ec8526bee0bd3fb276791b901fe4a56566de03c360ec7613766ebaf8d946d58e698e6b70087c6f3abc2535246f21b28c588219d6eb38e5a55a937220b868e09dc82f6dbc563b24c36bb3ace131b62e51cac7b57a281446d76a0aff2d3215acaf00f68c8c6429b8f1b7ff18a0c481592d81dd9
    The fifth integer represents the first prime factor of n which we referred to as p. Mine was:
        0x00f17866d65baf4e15668d324fde7adb1ef7017d0ab5e242d2cd294d3a23dbb401ce8958d2131c3d7be5caef0438fae403f3830db23e7178a8e53f647d569ab9898123da7c1e8077f9a20d8986568ad5eec48ff119913fd8fffc2e09126016d51bebe2eed6b0b96abcd25f292c273974080e9a00e2e698313f540c0253a29b3d3e576e71ea3705e3592f0312e96f6d8cab073458baba74c09ade49915e0a1f7a08ed04ecdca62fb846e2766163b00b8972f36cd52d92015e20d81a4b50be525509
    The next integer represents the second prime factor of n which we referred to as q. Mine was:
        0x00e1660d588d2aa8c3a382af59c9a3c350d7a65b1e52e7feb11727add02a852ed508534f613fdb56b768ea78e767a6f8b0ae06b1af432a6603296d23ed6e32441e8ca841bf51af776c83a44cbead9c697f0fc4f6253cc1f19f0d8c606445b12ecb9bac5dfa92c70ce21007d7774deca4dc30c1320f2a390e7d72e8515103ed7b7cfd96ccfa9f259f2556363ff27690f9c1caa9a7c500ff24c3ae3025ef6e5930708c7aa6c4aff116cdd1d591e297a665fc5d3e0264fa08bd231c6c8b54c10543ed
    The seventh integer represents  d % p - 1. Mine was:
        0x3e4c1ddbf7d38685a6eb8eab646eb5d18b506afe3466a76ed35770812b77273dc017573efb8731a5a16775bad52885632f940418945b9a1198f37ded88466acfbaed9114ac99e05a1b20faf619a5c003d5da7d0d6797dd584dab62d3c6ce9d3492eafd4b8e5487e127353dde1250944aefd97399167cf557ad4b5bde4ff955179c5ef62cc2fd55e65066ae9e630d14599b8639ce1304c41c30753277dc8cba634b231628e70730b7b8fd69aada645f95b48fc37ffa47380da9333f7319670c61
    The next integer represents d % q - 1. Mine was:
        0x75ad7a3a49398472dfe352f965b5023c2adac7a7c5512a3ffafed458625ab660b2c00c2991d54a28e7b5c2f9cdbbf70b0750a7640185194d7d4b65fe8811e64eacd10bc27f3b44f67aa4450d2847092d356677bc69443889f9e0d85281b047e6359880585a5961f884b613604e66c68bcf488e822c612d97816e9945daef1a11dfb3e3c0d56626f8af521380db3645af4fc7d3b79f15967433751fd9299b9716abc13d60631b53f4912117d15dab9a836f8af8650fc59039cc953f0938dd2ee1
    The ninth integer according to the appendix is the CRT coeffecient q^(-1) % p. Mine was:
        0x4fdbf28d80a1c0d9c476311d90fb8da93eaefa0f8fe3cd3f30c8fd411a5e240b3d5b015d3a258b8721e6b096449c152de4a90fefb3f2a3a115de93c70021f5c967a783f03f6224bdfe73debc125fb5cde96b59b6737764b346b1586680a80afe8d8123bd21e2f2c285d6ef4b3116e0a9e76a7796c41d9ad9cf629c06aa82d16fab9baa21c2825a509c96325d4e00c1cf91c77de5cf1ec57512a276684aefe840225424920c666da7fac6a87a06a19554f8a26530ffb519b1f1ace25061efa5b3
Public Key:
    In the public key file I expect to see the following becuase that is what is stated in the appendix:
    RSAPublicKey:

         RSAPublicKey ::= SEQUENCE {
             modulus           INTEGER,  -- n
             publicExponent    INTEGER   -- e
         }
    The first integer represents modulus, which we referred to as n. Mine was:
        0x00c07bb32c575f98092f338dfdf4dd2d23a1ae2246ea25ff26e30517b22c085a5e12a30b120fa3f16943e783642d86bd41a4d7e11742931fed58d56af6b8b5ab6d23630b7f386a75d9080b7ec85f737b3316233f6e04653734cdccf21b890f774d561346bf6b3e5328e449f3c26021b4da7d3be73c2dc1866f7f2ec328a15ff62420a0a53df6be50f99bf7c2a6adf31d6e73c2417c3ce5cead722c5fe566e243c82f7f9e0d8a4672554cfda23c8f6be196aa3a2f75210c7dabd0c1d5ca804c18f93b02cd1987db1f270715ea6de8cabffade843be8509f509da8d2cfa97130754ee6291882b79f35516c68c625e93d0d115dbf8cce870b51a5842bee0c8e3309adf8236a00129531dcd254903c9f945f05bd9cb4d51b4167030b6f64b43a88525e382ad1c839bcade8f8bea08fa10c48aebda5f5b434d4397d6e7a73b71a5594df0edee6027c83387c483df006a08140423ac305a041c6f2fbbe31edce4da0d215625c85514bd2f2f197f6eee107b652f9e444b12dae0b44dcf50097bc629d5ff7
    The second integer represents the RSA public exponent e. Mine was:
        0x010001
Sanity Check:
    >>> from ast import literal_eval
    >>> n = '0x00d49b14f203c16565d2fb6b46d9ce8e56ff54bfc8b575e859bc4e9d04ed037b2e09faa0fd57928fd8429b52b8d83e446ff4c7841ba8cb24eff81804dc55bea3b5f7350f72d3dbad6820e84b2790d5f8b4f4a95391212680976c55fbb929054bea881e0e61b03c639fa1a44ec7f44dc756f6de39d3de0bf8958c5875899f361fc9e54d0313f65b028f328985a4c485c71b62bee36f84705c42c04cb8a71443d99fa761d5605b8a2ea5e8278e2a34703892da849cf75aac15a6576651af2dfcb6c7bd2f1425ab3b8226598a4607f3c3daf4c32d4e364cba39bf4cca1b0b692861bbba17eb3237759eeacc363fec728da195f2c44bfaa879eeb720741bbd1f77e0da10d45cee25e7532b81084e943e07310b6b832a99e6b496270ffd5d4784ddf66224263e7aaa0d5ddb2ee8cdbf2adc56c2d3f39361c14f2f91baae0b4513d0053362b267bb783fca17a2392f6cfdd7ce50740c5a76c61ed84d976911150792eb0eb7cd6068d491629629d73da0b0cd6f32542679842b2ee75b4d196f3b30a71455'
    >>> s = '0x018038912e9bb473cb378c744656da0116b840975848fed9c3b8cc8cdecd4456e59d099468444e5a8dd3d1c6d3fac5c068c74ffdfc98362217bed1a990bb983ef7c1d77c2095a5f8e30fc8bed64f1062db0ab3f82bdcc9f84e16084e2378a5269a404addff93f328b147fb1c31c0ab02d580d00265220b338dddbb6648f6e56674056535046b5a5b38ef0f4cb6ec3f0b3c32c547c1ce8a40fefb0878e04718f15909b31e91dedd018a5343f5cf03759861cd6df5a4dd923af46fb23a39cfd5597aa0d4c775b887dd11cdd0bc7913bc4ae2fcd19b60aaa6901c66a54ca4b2672312d095d5a41d3245abd61776acd17feb7514642e99ff7d9e9a62adbe1d70a44ada0a540632251b54f3afc4225c3ec8526bee0bd3fb276791b901fe4a56566de03c360ec7613766ebaf8d946d58e698e6b70087c6f3abc2535246f21b28c588219d6eb38e5a55a937220b868e09dc82f6dbc563b24c36bb3ace131b62e51cac7b57a281446d76a0aff2d3215acaf00f68c8c6429b8f1b7ff18a0c481592d81dd9'
    >>> p = '0x00f17866d65baf4e15668d324fde7adb1ef7017d0ab5e242d2cd294d3a23dbb401ce8958d2131c3d7be5caef0438fae403f3830db23e7178a8e53f647d569ab9898123da7c1e8077f9a20d8986568ad5eec48ff119913fd8fffc2e09126016d51bebe2eed6b0b96abcd25f292c273974080e9a00e2e698313f540c0253a29b3d3e576e71ea3705e3592f0312e96f6d8cab073458baba74c09ade49915e0a1f7a08ed04ecdca62fb846e2766163b00b8972f36cd52d92015e20d81a4b50be525509'
    >>> q = '0x00e1660d588d2aa8c3a382af59c9a3c350d7a65b1e52e7feb11727add02a852ed508534f613fdb56b768ea78e767a6f8b0ae06b1af432a6603296d23ed6e32441e8ca841bf51af776c83a44cbead9c697f0fc4f6253cc1f19f0d8c606445b12ecb9bac5dfa92c70ce21007d7774deca4dc30c1320f2a390e7d72e8515103ed7b7cfd96ccfa9f259f2556363ff27690f9c1caa9a7c500ff24c3ae3025ef6e5930708c7aa6c4aff116cdd1d591e297a665fc5d3e0264fa08bd231c6c8b54c10543ed'
    >>> dmp = '0x3e4c1ddbf7d38685a6eb8eab646eb5d18b506afe3466a76ed35770812b77273dc017573efb8731a5a16775bad52885632f940418945b9a1198f37ded88466acfbaed9114ac99e05a1b20faf619a5c003d5da7d0d6797dd584dab62d3c6ce9d3492eafd4b8e5487e127353dde1250944aefd97399167cf557ad4b5bde4ff955179c5ef62cc2fd55e65066ae9e630d14599b8639ce1304c41c30753277dc8cba634b231628e70730b7b8fd69aada645f95b48fc37ffa47380da9333f7319670c61'
    >>> dmq = '0x75ad7a3a49398472dfe352f965b5023c2adac7a7c5512a3ffafed458625ab660b2c00c2991d54a28e7b5c2f9cdbbf70b0750a7640185194d7d4b65fe8811e64eacd10bc27f3b44f67aa4450d2847092d356677bc69443889f9e0d85281b047e6359880585a5961f884b613604e66c68bcf488e822c612d97816e9945daef1a11dfb3e3c0d56626f8af521380db3645af4fc7d3b79f15967433751fd9299b9716abc13d60631b53f4912117d15dab9a836f8af8650fc59039cc953f0938dd2ee1'
    >>> d = s
    >>> n = literal_eval(n)
    >>> p = literal_eval(p)
    >>> q = literal_eval(q)
    >>> n == p*q
    True
    >>> from math import lcm
    >>> lmb = lcm(p-1, q-1)
    >>> e = literal_eval('0x010001')
    >>> d = literal_eval(d)
    >>> e*d % lmb == 1
    True
    >>> from math import gcd
    >>> gcd(e, lmb) == 1
    True
